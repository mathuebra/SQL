-- Nome: Matheus Monteiro Huebra Perdigão
--       Letícia de Oliveira Soares

-- Questão 1
CREATE TABLE AUDITORIA (
    DATA DATE, CPF VARCHAR2(11),
    SALARIO_ANTERIOR NUMBER(10,2),
    SALARIO_ATUAL NUMBER(10,2),
    USUARIO VARCHAR2(40),
    PRIMARY KEY (CPF, DATA)
);

SELECT * FROM FUNCIONARIO; --Existe

CREATE OR REPLACE TRIGGER REGISTRA_ALTERACAO_SALARIO
AFTER UPDATE OF SALARIO ON FUNCIONARIO
FOR EACH ROW
BEGIN
    INSERT INTO AUDITORIA
    VALUES (SYSDATE, :OLD.CPF, :OLD.SALARIO, :NEW.SALARIO, USER);
    -- Tem que usar o ':' para poder acessar o 'OLD'
END;
/


-- Questão 2
CREATE OR REPLACE TRIGGER LIMITA_SALARIO
BEFORE UPDATE OF SALARIO ON FUNCIONARIO FOR EACH ROW
BEGIN
    IF (:NEW.SALARIO < 20000) THEN
        RAISE_APPLICATION_ERROR(-20000, 'Erro: Salario < 20000');
    ELSIF (:NEW.SALARIO > 50000) THEN
        RAISE_APPLICATION_ERROR(-20001, 'Erro: Salario > 50000');
    END IF;
END;
/
-- Teste da trigger
UPDATE FUNCIONARIO
SET SALARIO=5000
WHERE CPF LIKE '123%';

-- Neste caso nao precisa dropar a tabela, só usar o REPLACE
DROP TRIGGER LIMITA_SALARIO;
CREATE OR REPLACE TRIGGER LIMITA_SALARIO
BEFORE UPDATE OF SALARIO ON FUNCIONARIO FOR EACH ROW
BEGIN
    IF (:NEW.SALARIO < 20000) THEN
        :NEW.SALARIO := 20000;
    ELSIF (:NEW.SALARIO > 50000) THEN
        :NEW.SALARIO := 50000;
    END IF;
END; --Funciona
/
-- Teste da trigger
SELECT F.PRIMEIRO_NOME, F.SALARIO
FROM FUNCIONARIO F
WHERE CPF LIKE '123%';
UPDATE FUNCIONARIO
SET SALARIO = 5000
WHERE CPF LIKE '123%';
ROLLBACK; -- Para reverter a alteração da Trigger


-- Questão 3
CREATE TABLE DEPARTAMENTO AS 
SELECT * FROM ALUNO.DEPARTAMENTO;
ALTER TABLE DEPARTAMENTO ADD
QUANTIDADE_FUNCIONARIOS NUMBER(5);

UPDATE DEPARTAMENTO D SET QUANTIDADE_FUNCIONARIOS = 
(SELECT COUNT(*) FROM FUNCIONARIO F
WHERE D.NUMERO_DEPARTAMENTO = F.NUMERO_DEPARTAMENTO);
COMMIT; -- Tem que dar o commit pra poder usar o SELECT
SELECT * FROM DEPARTAMENTO;

CREATE OR REPLACE TRIGGER ATUALIZA_QUANT_FUNCIONARIOS
AFTER INSERT OR DELETE OR UPDATE OF NUMERO_DEPARTAMENTO ON FUNCIONARIO
BEGIN
    UPDATE DEPARTAMENTO D SET QUANTIDADE_FUNCIONARIOS = 
    (SELECT COUNT(*) FROM FUNCIONARIO F
    WHERE D.NUMERO_DEPARTAMENTO = F.NUMERO_DEPARTAMENTO);
END;
/

DELETE FROM FUNCIONARIO
WHERE NUMERO_DEPARTAMENTO = 5;
COMMIT;
SELECT * FROM DEPARTAMENTO;